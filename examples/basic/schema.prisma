// This file is automatically generated by Keystone, do not modify it manually.
// Modify your Keystone config when you want to change this.

datasource sqlite {
  url      = env("DATABASE_URL")
  provider = "sqlite"
}

generator client {
  provider = "prisma-client-js"
  output   = "node_modules/.prisma/client"
}

model User {
  id                         String        @id @default(cuid())
  name                       String        @default("")
  email                      String        @unique @default("")
  secret                     String?
  superSecret                String?
  secret2                    String?
  superSecret2               String?
  avatar_filesize            Int?
  avatar_extension           String?
  avatar_width               Int?
  avatar_height              Int?
  avatar_mode                String?
  avatar_id                  String?
  attachment_filesize        Int?
  attachment_mode            String?
  attachment_filename        String?
  password                   String?
  isAdmin                    Boolean       @default(false)
  roles                      String        @default("")
  phoneNumbers               PhoneNumber[] @relation("PhoneNumber_user")
  posts                      Post[]        @relation("Post_author")
  from_PhoneNumber_updatedBy PhoneNumber[] @relation("PhoneNumber_updatedBy")
  from_PhoneNumber_createdBy PhoneNumber[] @relation("PhoneNumber_createdBy")
  from_Post_updatedBy        Post[]        @relation("Post_updatedBy")
  from_Post_createdBy        Post[]        @relation("Post_createdBy")
}

model PhoneNumber {
  id          String    @id @default(cuid())
  user        User?     @relation("PhoneNumber_user", fields: [userId], references: [id])
  userId      String?   @map("user")
  type        String?
  value       String    @default("")
  updatedAt   DateTime? @updatedAt
  createdAt   DateTime? @default(now())
  updatedBy   User?     @relation("PhoneNumber_updatedBy", fields: [updatedById], references: [id])
  updatedById String?   @map("updatedBy")
  createdBy   User?     @relation("PhoneNumber_createdBy", fields: [createdById], references: [id])
  createdById String?   @map("createdBy")

  @@index([userId])
  @@index([updatedById])
  @@index([createdById])
}

model Post {
  id          String    @id @default(cuid())
  title       String    @default("")
  status      String?
  content     String    @default("[{\"type\":\"paragraph\",\"children\":[{\"text\":\"\"}]}]")
  publishDate DateTime?
  author      User?     @relation("Post_author", fields: [authorId], references: [id])
  authorId    String?   @map("author")
  updatedAt   DateTime? @updatedAt
  createdAt   DateTime? @default(now())
  updatedBy   User?     @relation("Post_updatedBy", fields: [updatedById], references: [id])
  updatedById String?   @map("updatedBy")
  createdBy   User?     @relation("Post_createdBy", fields: [createdById], references: [id])
  createdById String?   @map("createdBy")

  @@index([authorId])
  @@index([updatedById])
  @@index([createdById])
}